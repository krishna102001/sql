-- CTE(COMMON TABLE EXPRESSION) 
-- A CTE IS TEMPORARY RESULT SET THAT REFERENCED WITHIN A SELECT,INSERT,UPDATE OR DELETE STATEMENT THAT IMMEDIATELY FOLLOWS THE CTE 

-- CTE SYNTAX --
-- WITH CTE_NAME (COLUMN1,COLUMN2,...)
-- AS 
-- (
--     CTE_QUERY
-- )

-- USE [SAMPLE] 
-- GO

SELECT * FROM EMPLOYEE 
SELECT * FROM DEPARTMENT

WITH EMPLOYEECOUNT(DEPTID, TOTALEMPLOYEE)
AS
(
    SELECT DEPARTMENT_ID, COUNT(*) AS TOATLEMPLOYEE FROM EMPLOYEE GROUP BY DEPARTMENT_ID
)
SELECT DEPARTMENT_NAME,TOTALEMPLOYEE FROM DEPARTMENT 
JOIN EMPLOYEECOUNT ON EMPLOYEECOUNT.DEPTID = DEPARTMENT.ID ORDER BY DEPARTMENT_NAME

-- CTE IS ONLY REFERNCED BY SELECT,UPDATE,DELETE OR INSERT STATEMENT, THAT IMMEDIATELY FOLLOWS THE CTE

WITH EMPLOYEECOUNT(DEPTID, TOTALEMPLOYEE)
AS
(
    SELECT DEPARTMENT_ID, COUNT(*) AS TOATLEMPLOYEE FROM EMPLOYEE GROUP BY DEPARTMENT_ID
)
-- SELECT 'HELLO' // THIS SELECT OPTION WILL CAUSE AN ERROR ' Common table expression defined but not used '
SELECT DEPARTMENT_NAME,TOTALEMPLOYEE FROM DEPARTMENT 
JOIN EMPLOYEECOUNT ON EMPLOYEECOUNT.DEPTID = DEPARTMENT.ID ORDER BY DEPARTMENT_NAME

-- CREATING MULTIPLE CTE USING A SINGLE WITH CLAUSE
WITH EMPLOYEECOUNT_BY_HR_IT(DEPTNAME,TOTALEMPLOYEE)
AS 
(
    SELECT DEPARTMENT_NAME, COUNT(*) AS TOTALEMPLOYEE FROM EMPLOYEE 
    JOIN DEPARTMENT ON DEPARTMENT.ID = EMPLOYEE.DEPARTMENT_ID WHERE DEPARTMENT_NAME IN('IT','HR') GROUP BY DEPARTMENT_NAME
),
EMPLOYEECOUNT_BY_BPO_OTHER(DEPTNAME,TOTALEMPLOYEE)
AS
(
    SELECT DEPARTMENT_NAME, COUNT(*) AS TOTALEMPLOYEE FROM EMPLOYEE 
    JOIN DEPARTMENT ON DEPARTMENT.ID = EMPLOYEE.DEPARTMENT_ID WHERE DEPARTMENT_NAME IN('BPO','OTHER') GROUP BY DEPARTMENT_NAME
)
SELECT * FROM EMPLOYEECOUNT_BY_BPO_OTHER
UNION ALL
SELECT * FROM EMPLOYEECOUNT_BY_HR_IT

-- UPDATING ONE BASE TABLE USING CTE

WITH EMPLOYEE_NAME_GENDER
AS 
(
    SELECT ID,[NAME],GENDER FROM EMPLOYEE
)
SELECT * FROM EMPLOYEE_NAME_GENDER

WITH EMPLOYEE_NAME_GENDER
AS 
(
    SELECT ID,[NAME],GENDER FROM EMPLOYEE
)
UPDATE EMPLOYEE_NAME_GENDER SET [NAME]= 'JAYANTI' , GENDER = 'FEMALE' WHERE ID =6

SELECT * FROM EMPLOYEE


-- UPDATING TWO BASE TABLE USING CTE

WITH EMPLOYEEBYDEPARTMENT
AS 
(
    SELECT EMPLOYEE.ID,[NAME],GENDER,DEPARTMENT_NAME FROM EMPLOYEE 
    JOIN DEPARTMENT ON DEPARTMENT.ID = EMPLOYEE.DEPARTMENT_ID
)
SELECT * FROM EMPLOYEEBYDEPARTMENT

-- IF UPDATE IS AFFECTING ONE BASE TABLE THEN UPDATE IS ALLOWED
WITH EMPLOYEEBYDEPARTMENT
AS 
(
    SELECT EMPLOYEE.ID,[NAME],GENDER,DEPARTMENT_NAME FROM EMPLOYEE 
    JOIN DEPARTMENT ON DEPARTMENT.ID = EMPLOYEE.DEPARTMENT_ID
)
UPDATE EMPLOYEEBYDEPARTMENT SET NAME ='JAYANT' , GENDER = 'MALE' WHERE ID =6

WITH EMPLOYEEBYDEPARTMENT
AS 
(
    SELECT EMPLOYEE.ID,[NAME],GENDER,DEPARTMENT_NAME FROM EMPLOYEE 
    JOIN DEPARTMENT ON DEPARTMENT.ID = EMPLOYEE.DEPARTMENT_ID
)
-- UPDATE EMPLOYEEBYDEPARTMENT SET DEPARTMENT_NAME ='HR' WHERE ID =6 // UPDATE WILL SUCCEED BUT NOT AS EXCEPTED
UPDATE EMPLOYEEBYDEPARTMENT SET NAME ='JAYANTI' , GENDER = 'MALE',DEPARTMENT_NAME = 'HR' WHERE ID =6 -- IT WILL GIVE ERROR NOT UPDATABLE

-- RECURSIVE CTE
WITH EMPLOYEECTE(EMPLOYEEID,NAME,MANAGERID,[LEVEL])
AS 
(
    SELECT EMPLOYEEID, NAME, MANAGERID, 1 FROM EMPLOYEE WHERE MANAGERID IS NULL

    UNION ALL

    SELECT EMPLOYEE.EMPLOYEEID,EMPLOYEE.NAME,EMPLOYEE.MANAGERID,EMPLOYEECTE.[LEVEL]+1 FROM EMPLOYEE
    JOIN EMPLOYEECTE ON EMPLOYEE.MANAGERID = EMPLOYEECTE.EMPLOYEEID
)
SELECT EMPCTE.NAME AS EMPLOYEE, ISNULL(MGRCTE.NAME,'SUPERBOSS') AS MANAGER, EMPCTE.[LEVEL] FROM EMPLOYEECTE EMPCTE 
LEFT JOIN EMPLOYEECTE MGRCTE ON EMPCTE.MANAGERID = MGRCTE.EMPLOYEEID

