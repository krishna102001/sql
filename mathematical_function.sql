-- ABS(NUMERIC EXPRESSION)
SELECT ABS(-101.5) -- IT GIVE ABSOLUTE POSTIVE NO. MEANS IF THE NO. IS NEGATIVE THEN IT WILL GIVE POSITIVE NO. BY MULTIPYING BY MINUS 
SELECT ABS(45) -- IF THE NO. IS POSITIVE THEN IT WILL THE NO AS IT IS

-- CEILING(NUMERIC EXPRESSION)
SELECT CEILING(5.5) -- IT WILL RETURN HIGHEST NO AFTER THE DECIMAL
SELECT CEILING(-5.2) -- IT RETURN -5

-- FLOOR(NUMERIC EXPRESSION)
SELECT FLOOR(5.5) -- IT WILL RETURN LOWEST NO.
SELECT FLOOR(-5.2) --IT RETURN -6

-- POWER(EXPRESSION,POWER)
SELECT POWER(2,3) -- IT WILL RETURN POWER OF 2 WRT 3 MEANS 2*2*2 = 8
SELECT POWER(-2,3)

-- SQUARE(EXPRESSION)
SELECT SQUARE(3) -- IT WILL RETURN SQUARE OF THE NUMBER
SELECT SQUARE(-3)

-- SQRT(EXPRESSION)
SELECT SQRT(4) -- IT WILL RETURN SQUARE ROOT OF NUMBER , EXPRESSION MUST BE POSITIVE IN NUMBER 
SELECT SQRT(3) -- IT WILL GIVE ARTIMETHIC OVERFLOW ERROR  WHEN NO. IS NEGATIVE

-- RAND(SEED_VALUE_OPTIONAL)
SELECT RAND() -- IT WILL GIVE RANDOM NO. WHEN SEED VALUE IS NOT GIVEN
SELECT RAND(10) -- IT WILL GIVE ONLY ONE RANDOM NO. AND IT WILL REMAIN SAME THROUGH OUT THE PROGRAM

DECLARE @START INT
SET @START = 1
WHILE(@START<=10)
BEGIN
    PRINT FLOOR(RAND()*100)
    SET @START = @START + 1
END

-- ROUND(EXPRESSION,LENGTH,FUNCTION)
SELECT ROUND(55.675,2,0) -- IT RETURN 55.680 IT WILL ROUND THE DECIMAL NO. FROM THE SECOND DIGIT IN DECIMAL NO.
SELECT ROUND(55.670,0) -- IT RETURN 56.000
SELECT ROUND(55.672,2,1) -- IT WILL TRUNCATE THE DECIMAL NO. AFTER THE 2 DIGIT, IT RETURN 55.670
SELECT ROUND(240.672,-2) -- IT WILL RETURN 200.000