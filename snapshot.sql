-- SETTING ISOLATION LEVEL SERIALIZABLE

-- TRABSACTION 1
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
BEGIN TRANSACTION
UPDATE TBLINVENTORY SET ITEMSTOCK = 5 WHERE ID = 1
WAITFOR DELAY '00:00:10'
COMMIT TRANSACTION

-- TRANSACTION 2
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
BEGIN TRANSACTION
    SELECT ITEMSTOCK FROM TBLINVENTORY WHERE ID = 1
COMMIT TRANSACTION

UPDATE TBLINVENTORY SET ITEMSTOCK = 10 WHERE ID = 1

-- SETTING SAMPLE DATABASE TO ON THE SNAPSHOT ISOLATION  
ALTER DATABASE SAMPLE SET ALLOW_SNAPSHOT_ISOLATION ON -- TURN ON THE SNAPSHOT ISOLATION LEVEL
SET TRANSACTION ISOLATION LEVEL SNAPSHOT -- SET THE TRANSACTION TO SNAPSHOT SO WHEN RUNNING THE TRANSACTION 1 AFTER THAT ALSO WE CAN FETCH THE ITEM STOCK FROM THE TBLINVENTORY TABLE
BEGIN TRANSACTION
    SELECT ITEMSTOCK FROM TBLINVENTORY WHERE ID = 1
COMMIT TRANSACTION

-- MODIFYING THE DATA WITH SNAPSHOT ISOLATION LEVEL 
ALTER DATABASE SAMPLE SET ALLOW_SNAPSHOT_ISOLATION ON
SET TRANSACTION ISOLATION LEVEL SNAPSHOT
UPDATE TBLINVENTORY SET ITEMSTOCK = 8 WHERE ID = 1 -- WHEN TRANSACTION 1 WILL GET COMPLETE THEN TRANSACTION 2 WILL GIVE ERROR UPDATE CONFLICT 

--TRANSACTION 1
SET TRANSACTION ISOLATION LEVEL READ COMMITTED
BEGIN TRANSACTION
UPDATE TBLINVENTORY SET ITEMSTOCK = 5 WHERE ID = 1
WAITFOR DELAY '00:00:10'
COMMIT TRANSACTION

--TRANSACTION 2
ALTER DATABASE SAMPLE SET READ_COMMITTED_SNAPSHOT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED
BEGIN TRAN
    SELECT ITEMSTOCK FROM TBLINVENTORY WHERE ID = 1
COMMIT TRAN