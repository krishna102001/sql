-- T-SQL QUERY FOR LIST ALL TABLE 

SELECT * FROM SYSOBJECTS WHERE XTYPE ='U' -- U IS FOR USER TABLE

SELECT * FROM SYSOBJECTS WHERE XTYPE ='V' -- V IS FOR VIEW

SELECT * FROM SYS.TABLES -- ALL TABLE IS LISTED 

SELECT * FROM INFORMATION_SCHEMA.TABLES -- IT GIVES VIEW AND USER TABLE


-- RE RUNNABLE SQL SERVER SCRIPTS

USE[SAMPLE]
IF(NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'TBLPRODUCTS'))
BEGIN
    CREATE TABLE TBLPRODUCTS(
        [ID] INT IDENTITY PRIMARY KEY,
        [NAME] NVARCHAR(50),
        [DESCRIPTION] NVARCHAR(250)
    )
    PRINT 'TABLE SUCCESSFUL CREATED'
END
ELSE
BEGIN
    PRINT 'TABLE TBLPRODUCTS ALREADY EXITS'
END

IF(OBJECT_ID('TBLPRODUCTS') IS NOT NULL)
BEGIN
    DROP TABLE TBLPRODUCTS
END
ELSE 
BEGIN
    CREATE TABLE TBLPRODUCTS(
        [ID] INT IDENTITY PRIMARY KEY,
        [NAME] NVARCHAR(50),
        [DESCRIPTION] NVARCHAR(250)
    )
END

IF(NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME ='EMAILADDRESS' AND TABLE_NAME = 'TBLPRODUCTS' AND TABLE_SCHEMA = 'DBO'))
BEGIN
    ALTER TABLE TBLPRODUCTS ADD EMAILADDRESS NVARCHAR(50)
END
ELSE 
BEGIN
    PRINT 'COLUMN ALREADY EXIST'
END

IF(COL_LENGTH('TBLPRODUCTS','EMAILADDRESS')IS NOT NULL)
BEGIN
    PRINT 'COLUMN ALREADY EXITS'
END
ELSE 
BEGIN
    PRINT 'COLUMN NOT EXITS'
END


-- IF WE WANT TO CHNAGE THE COLUMN WITHOUT LOOSING A DATA

ALTER TABLE TBLPRODUCTS ALTER COLUMN SALARY INT


-- MAKING OPTIONAL STORED PROCEDURES PARAMETER

CREATE PROC SP_SEARCHEMPLOYEE
@NAME NVARCHAR(50) = NULL,
@GENDER NVARCHAR(50) = NULL,
@EMAIL NVARCHAR(50) = NULL,
@AGE INT = NULL
AS 
BEGIN
    SELECT * FROM EMPLOYEE WHERE (NAME = @NAME OR @NAME IS NULL ) AND (GENDER = @GENDER OR @GENDER IS NULL) 
                                    AND (@EMAIL IS NULL OR EMAIL = @EMAIL) AND (@AGE IS NULL OR AGE = @AGE)
END

ALTER TABLE EMPLOYEE ADD AGE INT
SELECT * FROM EMPLOYEE

EXEC SP_SEARCHEMPLOYEE @NAME = 'KRISHNA'
EXEC SP_SEARCHEMPLOYEE @GENDER = 'FEMALE'


-- MERGE IN SQL SERVER (MEANS NOW WE CAN UPDATE AND DELETE USING ONLY ONE SQL QUERY)
            
            --SYNTAX
-- MERGE [TARGET TABLE] AS T USING [SOURCE TABLE] AS S 
-- ON [JOIN CONDITIONS]
-- WHEN MATCHED THEN 
--     [UPDATE STATEMENT]
-- WHEN NOT MATCHED BY TARGET THEN
--     [INSERT STATEMENT]
-- WHEN NOT MATCHED BY SOURCE THEN
--     [DELETE STATEMENT]

